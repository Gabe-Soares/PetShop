{
	"info": {
		"_postman_id": "73743bd3-89a7-42bb-8bfa-7c831498b426",
		"name": "PetShop APIs",
		"description": "Postman collection for testing and validating the Express.js APIs for the PetShop project. Project with purposes of studying and generate portfolio only.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/users/",
			"item": [
				{
					"name": "POST /validate/ - assert valid",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"admin\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/validate/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"validate",
								""
							]
						},
						"description": "Request for testing the endpoint that validates the user and password.\r\nEndpoint used for login, e.g.."
					},
					"response": []
				},
				{
					"name": "POST /validate/ - assert invalid",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"invalid\",\r\n    \"password\": \"invalid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/validate/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"validate",
								""
							]
						},
						"description": "Request for testing the endpoint that validates the user and password.\r\nEndpoint used for login, e.g.."
					},
					"response": []
				},
				{
					"name": "POST /create/ - common user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"new_user\": \"matheus\",\r\n    \"new_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/create/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"create",
								""
							]
						},
						"description": "Request for testing the endpoint that creates new user.\r\nThis test is for validating the common user creation."
					},
					"response": []
				},
				{
					"name": "POST /create/ - special user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"new_user\": \"gabriel\",\r\n    \"new_password\": \"12345\",\r\n    \"new_type\": \"colaborator\",\r\n    \"validator_user\": \"admin\",\r\n    \"validator_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/create/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"create",
								""
							]
						},
						"description": "Request for testing the endpoint that creates new user.\r\nThis test is for validating the special (admin or other special types) user creation."
					},
					"response": []
				},
				{
					"name": "POST /delete/ - assert deleted (another account)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"gabriel\",\r\n    \"deleter\": \"admin\",\r\n    \"deleter_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/delete/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"delete",
								""
							]
						},
						"description": "Endpoint for deletting acconts for the /users/ route."
					},
					"response": []
				},
				{
					"name": "POST /delete/ - assert deleted (same account)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"matheus\",\r\n    \"deleter\": \"matheus\",\r\n    \"deleter_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/delete/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"delete",
								""
							]
						},
						"description": "Endpoint for deletting acconts for the /users/ route."
					},
					"response": []
				},
				{
					"name": "POST /delete/ - assert invalid",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"gabriel\",\r\n    \"deleter\": \"invalid_user\",\r\n    \"deleter_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/delete/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"delete",
								""
							]
						},
						"description": "Endpoint for deletting acconts for the /users/ route."
					},
					"response": []
				},
				{
					"name": "POST /delete/ - assert not authorized",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"gabriel\",\r\n    \"deleter\": \"matheus\",\r\n    \"deleter_password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/delete/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"delete",
								""
							]
						},
						"description": "Endpoint for deletting acconts for the /users/ route."
					},
					"response": []
				}
			],
			"description": "Requests related to the /users/ endpoint.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4adc505d-f7af-4bf8-9b53-25f4b18cf691",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4329fb75-da23-4c28-a99a-4e8bccde2b42",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "/pets/",
			"item": [
				{
					"name": "POST /add/ - assert valid",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Odie\", \r\n    \"owner\": \"admin\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"13\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/add/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"add",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /add/ - assert invalid",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Odie\", \r\n    \"owner\": \"invalid_user\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"13\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/add/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"add",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /remove/ - assert removed",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Odie\", \r\n    \"owner\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/remove/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"remove",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /remove/ - assert invalid",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Odie\", \r\n    \"owner\": \"invalid_user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/remove/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"remove",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /remove/ - assert invalid (Pet invalid)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Odie\", \r\n    \"owner\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/remove/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"remove",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /update/ - assert updated",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pet_name_old\": \"Odie\", \r\n    \"name\": \"Odie\", \r\n    \"owner\": \"admin\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"11\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/update/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"update",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /update/ - assert updated (rename Pet)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pet_name_old\": \"Odie\", \r\n    \"name\": \"Rex\", \r\n    \"owner\": \"admin\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"11\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/update/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"update",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /update/ - assert invalid (Owner invalid)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pet_name_old\": \"Rex\", \r\n    \"name\": \"Rex\", \r\n    \"owner\": \"invalid_user\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"11\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/update/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"update",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "POST /update/ - assert invalid (Pet invalid)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pet_name_old\": \"Odie\", \r\n    \"name\": \"Rex\", \r\n    \"owner\": \"admin\", \r\n    \"species\": \"dog\", \r\n    \"race\": \"daschund\", \r\n    \"age\": \"11\", \r\n    \"obs\": \"overweight; heart murmur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/pets/update/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"update",
								""
							]
						},
						"description": "Request for testing the endpoint that adds new pet."
					},
					"response": []
				},
				{
					"name": "GET /search?user=____/ - return list of pets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/pets/search?user=admin",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"search"
							],
							"query": [
								{
									"key": "user",
									"value": "admin",
									"description": "Owner user."
								}
							]
						},
						"description": "Endpoint for reading Pets data by owner. Passing as a parameter the owner user, retrieves the list of pets owned by that user."
					},
					"response": []
				},
				{
					"name": "GET /search?user=____/ - return missing parameter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/pets/search",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"search"
							],
							"query": [
								{
									"key": "user",
									"value": "admin",
									"description": "Owner user.",
									"disabled": true
								}
							]
						},
						"description": "Endpoint for reading Pets data by owner. Passing as a parameter the owner user, retrieves the list of pets owned by that user."
					},
					"response": []
				},
				{
					"name": "GET /search?user=____/ - return no pets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/pets/search?user=gabriel",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"search"
							],
							"query": [
								{
									"key": "user",
									"value": "gabriel",
									"description": "Owner user."
								}
							]
						},
						"description": "Endpoint for reading Pets data by owner. Passing as a parameter the owner user, retrieves the list of pets owned by that user."
					},
					"response": []
				},
				{
					"name": "GET /search?user=____/ - assert invalid owner",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/pets/search?user=invalid_user",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pets",
								"search"
							],
							"query": [
								{
									"key": "user",
									"value": "invalid_user",
									"description": "Owner user."
								}
							]
						},
						"description": "Endpoint for reading Pets data by owner. Passing as a parameter the owner user, retrieves the list of pets owned by that user."
					},
					"response": []
				}
			],
			"description": "Requests related to the /pets/ endpoint.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "82318ccb-74f2-4e76-a989-740320223e9f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a1d2e5e3-6d48-4e75-b4f3-2590e36452ea",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "de5159d4-99b2-45ac-8ecc-ebbf870a1797",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "107cfc80-722a-45c0-bfe2-f68821f25918",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}